name: Release
on:
    # schedule:
    #     - cron: '0 12 * * 1-5' # At 12:00 UTC on every day-of-week from Monday to Friday

    # manual trigger
    workflow_dispatch:

jobs:
    bump_version:
        name: Bump Version
        runs-on: ubuntu-latest
        outputs:
            new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
            changelog: ${{ steps.github_tag_action.outputs.changelog }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Bump version and push tag
              id: github_tag_action
              uses: mathieudutour/github-tag-action@331898d5052eedac9b15fec867b5ba66ebf9b692
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  release_branches: .*

    create_release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: bump_version
        if: ${{ needs.bump_version.outputs.new_tag != null }}
        env:
            SOURCE_DIR: 'build'
            AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_PRODUCTION }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            REACT_APP_GRAPH_API_URLS: ${{ secrets.REACT_APP_GRAPH_API_URLS_PRODUCTION }}
            REACT_APP_NETWORK_ID: ${{ secrets.REACT_APP_NETWORK_ID_PRODUCTION }}
            REACT_APP_NETWORK_URL: ${{ secrets.REACT_APP_NETWORK_URL_PRODUCTION }}
            REACT_APP_COIN_TICKER_PRODUCTION: ${{ secrets.REACT_APP_COIN_TICKER_PRODUCTION }}
            REACT_APP_SYSTEM_STATUS: ${{ secrets.REACT_APP_SYSTEM_STATUS }}
            REACT_APP_GOOGLE_ANALYTICS_ID: ${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID_PRODUCTION }}
            REACT_APP_SHOW_AUCTIONS: ${{ secrets.REACT_APP_SHOW_AUCTIONS_PRODUCTION }}
            REACT_APP_WYRE_WORKER: ${{ secrets.REACT_APP_WYRE_WORKER }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up node
              uses: actions/setup-node@v2
              with:
                  node-version: 14
                  registry-url: https://registry.npmjs.org

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build the IPFS bundle
              run: yarn build

            - name: Deploy to AWS
              uses: jakejarvis/s3-sync-action@v0.5.0
              with:
                  args: --acl public-read --follow-symlinks --delete

            - name: Pin to IPFS
              id: upload
              uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
              with:
                  pin-name: Reflexer
                  path: './build'
                  pinata-api-key: ${{ secrets.PINATA_API_KEY }}
                  pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

            - name: Convert CIDv0 to CIDv1
              id: convert_cidv0
              uses: uniswap/convert-cidv0-cidv1@v1.0.0
              with:
                  cidv0: ${{ steps.upload.outputs.hash }}

            - name: Update DNS with new IPFS hash
              env:
                  CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
                  RECORD_DOMAIN: 'reflexer.finance'
                  RECORD_NAME: '_dnslink.app'
                  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
              uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
              with:
                  cid: ${{ steps.upload.outputs.hash }}

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1.1.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.bump_version.outputs.new_tag }}
                  release_name: Release ${{ needs.bump_version.outputs.new_tag }}
                  body: |
                      IPFS hash of the deployment:
                      - CIDv0: `${{ steps.upload.outputs.hash }}`
                      - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`

                      The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [app.reflexer.finance](https://app.reflexer.finance).

                      You can also access the Reflexer app directly from an IPFS gateway.
                      **BEWARE**: The Reflexer app uses [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) to remember your settings, such as transactions hashes.
                      **You should always use an IPFS gateway that enforces origin separation**, or our alias to the latest release at [app.reflexer.finance](https://app.reflexer.finance).

                      IPFS gateways:
                      - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
                      - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
                      - [ipfs://${{ steps.upload.outputs.hash }}/](ipfs://${{ steps.upload.outputs.hash }}/)

                      ${{ needs.bump_version.outputs.changelog }}
